feat: Complete Accounts app implementation, static assets, and full test coverage

- Implemented custom Accounts app with a UUID-based User model, unique nullable email, and timestamp fields.
- Built and registered custom forms (SignUpForm, ProfileForm, CustomAuthenticationForm) with robust validation and user-friendly widgets.
- Developed authentication views (signup, login, logout, profile, password reset) using Django class-based views and custom logic (including 'remember me' support).
- Created and styled all authentication-related templates (login, signup, profile, password reset, email templates) with responsive CSS and JavaScript enhancements:
    - Password visibility toggle
    - Password strength indicator
    - Form loading states
    - Auto-focus on first field
- Integrated static files (CSS/JS) and ensured proper static/media configuration.
- Configured email backend for development and implemented password reset email flow with custom templates.
- Hardened security: enabled password validators, CSRF protection, secure cookies, and session timeout logic.
- Wrote comprehensive unit, integration, and security tests for models, forms, views, and flows (registration, login, profile update, password reset, XSS/CSRF/SQLi prevention, password hashing).
- Fixed all previously reported test failures (session expiry, password reset redirect, profile messages) with targeted, production-quality code changes.
- All 43 tests now pass, confirming feature completeness and code quality.

This commit marks the completion of the authentication feature (Phases 1â€“10) as per the implementation plan. Ready for code review and integration. 