# Generated by Django 4.2.21 on 2025-05-30 12:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SearchSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the search session', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Title of the search session', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the search session')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('strategy_ready', 'Strategy Ready'), ('executing', 'Executing Searches'), ('processing', 'Processing Results'), ('ready_for_review', 'Ready for Review'), ('in_review', 'Under Review'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], default='draft', help_text='Current status of the search session', max_length=20)),
                ('visibility', models.CharField(choices=[('private', 'Private'), ('team', 'Team'), ('public', 'Public')], default='private', help_text='Who can view this session (Phase 2 feature)', max_length=20)),
                ('permissions', models.JSONField(blank=True, default=dict, help_text='Permission settings (Phase 2 feature)')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this session was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this session was last updated')),
                ('start_date', models.DateTimeField(blank=True, help_text='When this session was started (moved beyond draft)', null=True)),
                ('completed_date', models.DateTimeField(blank=True, help_text='When this session was completed', null=True)),
                ('created_by', models.ForeignKey(help_text='User who created this search session', on_delete=django.db.models.deletion.CASCADE, related_name='created_sessions', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search Session',
                'verbose_name_plural': 'Search Sessions',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSessionStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this stats record', primary_key=True, serialize=False)),
                ('total_sessions', models.PositiveIntegerField(default=0, help_text='Total number of sessions created')),
                ('completed_sessions', models.PositiveIntegerField(default=0, help_text='Number of sessions completed')),
                ('archived_sessions', models.PositiveIntegerField(default=0, help_text='Number of sessions archived')),
                ('failed_sessions', models.PositiveIntegerField(default=0, help_text='Number of sessions that failed')),
                ('avg_completion_time', models.DurationField(blank=True, help_text='Average time to complete a session', null=True)),
                ('fastest_completion', models.DurationField(blank=True, help_text='Fastest session completion time', null=True)),
                ('total_activities', models.PositiveIntegerField(default=0, help_text='Total number of activities performed')),
                ('last_activity_date', models.DateTimeField(blank=True, help_text='Date of last session activity', null=True)),
                ('most_active_day', models.CharField(blank=True, help_text='Day of week user is most active', max_length=10)),
                ('most_active_hour', models.PositiveSmallIntegerField(blank=True, help_text='Hour of day user is most active', null=True)),
                ('completion_rate', models.FloatField(default=0.0, help_text='Percentage of sessions completed')),
                ('productivity_score', models.FloatField(default=0.0, help_text='Overall productivity score (0-100)')),
                ('stats_calculated_at', models.DateTimeField(auto_now=True, help_text='When these statistics were last calculated')),
                ('calculation_metadata', models.JSONField(blank=True, default=dict, help_text='Metadata about statistics calculation')),
                ('notification_preferences', models.JSONField(blank=True, default=dict, help_text='User notification preferences for real-time updates')),
                ('user', models.OneToOneField(help_text='User these statistics belong to', on_delete=django.db.models.deletion.CASCADE, related_name='session_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session Statistics',
                'verbose_name_plural': 'User Session Statistics',
            },
        ),
        migrations.CreateModel(
            name='SessionStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this status history record', primary_key=True, serialize=False)),
                ('from_status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('strategy_ready', 'Strategy Ready'), ('executing', 'Executing Searches'), ('processing', 'Processing Results'), ('ready_for_review', 'Ready for Review'), ('in_review', 'Under Review'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], help_text='Previous status (empty for initial creation)', max_length=20)),
                ('to_status', models.CharField(choices=[('draft', 'Draft'), ('strategy_ready', 'Strategy Ready'), ('executing', 'Executing Searches'), ('processing', 'Processing Results'), ('ready_for_review', 'Ready for Review'), ('in_review', 'Under Review'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], help_text='New status after change', max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True, help_text='Exact time of status change')),
                ('reason', models.TextField(blank=True, help_text='Optional reason for the status change')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional context about the status change')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address from which change was made', null=True)),
                ('duration_in_previous_status', models.DurationField(blank=True, help_text='How long the session was in the previous status', null=True)),
                ('changed_by', models.ForeignKey(help_text='User who initiated this status change', on_delete=django.db.models.deletion.PROTECT, related_name='status_changes', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(help_text='The session this status change belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='review_manager.searchsession')),
            ],
            options={
                'verbose_name': 'Session Status History',
                'verbose_name_plural': 'Session Status Histories',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['session', '-changed_at'], name='review_mana_session_4289ab_idx'), models.Index(fields=['changed_by', '-changed_at'], name='review_mana_changed_ef246b_idx'), models.Index(fields=['from_status', 'to_status'], name='review_mana_from_st_f79ca7_idx'), models.Index(fields=['-changed_at'], name='review_mana_changed_09adc2_idx')],
            },
        ),
        migrations.CreateModel(
            name='SessionArchive',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this archive record', primary_key=True, serialize=False)),
                ('archived_at', models.DateTimeField(auto_now_add=True, help_text='When this session was archived')),
                ('archive_reason', models.TextField(blank=True, help_text='Optional reason for archiving')),
                ('stats_snapshot', models.JSONField(default=dict, help_text='Session statistics at time of archiving')),
                ('restored_at', models.DateTimeField(blank=True, help_text='When this session was last restored from archive', null=True)),
                ('archived_by', models.ForeignKey(help_text='User who archived this session', on_delete=django.db.models.deletion.PROTECT, related_name='archived_sessions', to=settings.AUTH_USER_MODEL)),
                ('restored_by', models.ForeignKey(blank=True, help_text='User who last restored this session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restored_sessions', to=settings.AUTH_USER_MODEL)),
                ('session', models.OneToOneField(help_text='The archived session', on_delete=django.db.models.deletion.CASCADE, related_name='archive_info', to='review_manager.searchsession')),
            ],
            options={
                'verbose_name': 'Session Archive',
                'verbose_name_plural': 'Session Archives',
                'ordering': ['-archived_at'],
                'indexes': [models.Index(fields=['archived_by', '-archived_at'], name='review_mana_archive_3c977c_idx'), models.Index(fields=['-archived_at'], name='review_mana_archive_a747b1_idx')],
            },
        ),
        migrations.CreateModel(
            name='SessionActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this activity', primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('CREATED', 'Session Created'), ('STATUS_CHANGED', 'Status Changed'), ('MODIFIED', 'Session Modified'), ('STRATEGY_DEFINED', 'Search Strategy Defined'), ('SEARCH_EXECUTED', 'Search Executed'), ('RESULTS_PROCESSED', 'Results Processed'), ('REVIEW_STARTED', 'Review Started'), ('REVIEW_COMPLETED', 'Review Completed'), ('COMMENT', 'Comment Added'), ('ERROR', 'Error Occurred'), ('SYSTEM', 'System Event')], help_text='Type of activity recorded', max_length=20)),
                ('description', models.TextField(help_text='Detailed description of the activity')),
                ('old_status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('strategy_ready', 'Strategy Ready'), ('executing', 'Executing Searches'), ('processing', 'Processing Results'), ('ready_for_review', 'Ready for Review'), ('in_review', 'Under Review'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], help_text='Previous status (for status changes)', max_length=20, null=True)),
                ('new_status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('strategy_ready', 'Strategy Ready'), ('executing', 'Executing Searches'), ('processing', 'Processing Results'), ('ready_for_review', 'Ready for Review'), ('in_review', 'Under Review'), ('completed', 'Completed'), ('failed', 'Failed'), ('archived', 'Archived')], help_text='New status (for status changes)', max_length=20, null=True)),
                ('performed_at', models.DateTimeField(auto_now_add=True, help_text='When this activity occurred')),
                ('metadata', models.JSONField(blank=True, help_text='Additional structured data about the activity', null=True)),
                ('performed_by', models.ForeignKey(help_text='User who performed this activity', on_delete=django.db.models.deletion.PROTECT, related_name='session_activities', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(help_text='The search session this activity belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='review_manager.searchsession')),
            ],
            options={
                'verbose_name': 'Session Activity',
                'verbose_name_plural': 'Session Activities',
                'ordering': ['-performed_at'],
                'indexes': [models.Index(fields=['session', 'performed_at'], name='review_mana_session_cd49d1_idx'), models.Index(fields=['activity_type', 'performed_at'], name='review_mana_activit_82a210_idx'), models.Index(fields=['performed_by', 'performed_at'], name='review_mana_perform_f9576b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='searchsession',
            index=models.Index(fields=['created_by', 'status'], name='review_mana_created_ff6ce7_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsession',
            index=models.Index(fields=['created_at'], name='review_mana_created_75de23_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsession',
            index=models.Index(fields=['updated_at'], name='review_mana_updated_a3db28_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsession',
            index=models.Index(fields=['status'], name='review_mana_status_03aa17_idx'),
        ),
    ]
